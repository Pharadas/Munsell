[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://cqvbhxl5c3lsa"]

[ext_resource type="Texture2D" uid="uid://nc7xbw5xl8yh" path="res://New Piskel.png" id="1_dw5a8"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_65a15"]
output_port_for_preview = 0
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeWorldPositionFromDepth" id="VisualShaderNodeWorldPositionFromDepth_c86dl"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_4assk"]
size = Vector2(560, 760)
expression = "out_color = input0 * input1;"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_jdtbg"]
output_port_for_preview = 0
texture = ExtResource("1_dw5a8")

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D depth_tex_frg_3 : hint_depth_texture, repeat_disable, filter_nearest;
uniform sampler2D tex_frg_7;



void fragment() {
// Input:2
	vec2 n_out2p0 = SCREEN_UV;


	vec3 n_out3p0;
// WorldPositionFromDepth:3
	{
		float __log_depth = textureLod(depth_tex_frg_3, n_out2p0, 0.0).x;
	vec4 __depth_view = INV_PROJECTION_MATRIX * vec4(vec3(n_out2p0, __log_depth) * 2.0 - 1.0, 1.0);
		__depth_view.xyz /= __depth_view.w;
		n_out3p0 = (INV_VIEW_MATRIX * __depth_view).xyz;
	}


// Texture2D:7
	vec4 n_out7p0 = texture(tex_frg_7, n_out2p0);


	vec3 n_out4p0;
// Expression:4
	n_out4p0 = vec3(0.0, 0.0, 0.0);
	{
		n_out4p0 = n_out3p0 * vec3(n_out7p0.xyz);
	}


// Output:0
	ALBEDO = n_out4p0;


}
"
nodes/fragment/0/position = Vector2(1220, 380)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_65a15")
nodes/fragment/2/position = Vector2(-140, 420)
nodes/fragment/3/node = SubResource("VisualShaderNodeWorldPositionFromDepth_c86dl")
nodes/fragment/3/position = Vector2(220, 420)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_4assk")
nodes/fragment/4/position = Vector2(500, 380)
nodes/fragment/4/size = Vector2(560, 760)
nodes/fragment/4/input_ports = "0,4,input0;1,4,input1;"
nodes/fragment/4/output_ports = "0,4,out_color;"
nodes/fragment/4/expression = "out_color = input0 * input1;"
nodes/fragment/7/node = SubResource("VisualShaderNodeTexture_jdtbg")
nodes/fragment/7/position = Vector2(220, 520)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 4, 0, 0, 0, 2, 0, 7, 0, 3, 0, 4, 0, 7, 0, 4, 1)
